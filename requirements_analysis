Stakeholders & Actors

Module Leader
Lecturer
SCO
Student
Academic Misconduct Teams (for each department)
Professional Services Team
IT Staff
Software developer
System architect
System administrator
Backup system
Email server

Functional Requirements

 - Each staff member is uniquely identified by a staff ID number.(M)
 - Every action should be logged with timestamps and ID of person who performed it.(M)
 - Module Leader or Lecturer can report a case of academic misconduct.(M)
 - Module leader/lecturer can input Information about the misconduct into the application: Module code, academic year, term Student number, name and email Type of misconduct Title of assessment affected % of marks that affects the total mark of the module Anonymized evidence. (M)
 - All cases submitted by module leaders or lecturers are sent to the AM team. (M)
 - Member of AM team can check programme of student (S)
 - Relevant stakeholders such as the AM team can check the status of the Misconduct case. (S)
 - Members of the AM team can view a list of all cases submitted by module leaders/lecturers across all departments (M)
 - Members of the AM team can view a list of all cases submitted by module leaders/lecturers in their own home department. (M)
 - Member of AM team can forward case to the home department AM team (M)
 - System notifies AM team every time a case is forwarded to them (S)
 - AM can send a request to SCO for all records of previous offences for that specific student (S)
 - SCO can view all previous offences (if any) for each student in ATOM University. (S)
 - SCO can add offences to student's record (S)
 - SCO can delete offences from student's record (S)
 - AM team can send an invitation to the relevant student (S)
 - AM team can schedule an interview with the module Leader and member of the misconduct team with at least 7 days notice (S)
 - AM team can input the following details for the interview: The ID of module leader, the ID of AM team member, the ID of student, the date of the interview and the type of interview which can be either: Local Academic Misconduct Procedure (LAMP) OR An investigatory interview. (M)
 - The AM team can send an interview invitation to student. (M)
 - The AM team can send details of interview (like date and time) to the member of the AM team who will be attending. (S)
 - The AM team can send details of interview (like date and time) to the module leader (S) 
 - Student can confirm invitation (M)
 - Notify the AM misconduct team if the student has confirmed the interview attendance (S) 
 - AM team can check whether the student has confirmed their attendance of the interview (S)
 - AM team can add a summary of the interview to the case details. The summary of the interview can include the result which is either: no case, poor academic practice, misconduct or referral to SCO (M)
 - AM team can send an email containing the summary of the interview to the relevant student (M) 
 - AM team can set a deadline for student to complete relevant forms (5 days) (S)
 - In the case that the student has not completed the form, the system immediately notifies the PS team (M)
 - AM team can resend form to student (C)
 - Student can fill in form (M)
 - System notifies AM team when student has filled in form (S)
 - AM team can view the form (S)
 - AM team can send form to Professional Services Team (M)
 - Professional services team can send a copy of signed form to student, module leader and SCO (M)
 - AM team can close a case (M)
 - AM team can drop a case (M)
 - AM team can forward case to SCO (M)
 - SCO can send an email to module leader (M) 
 - AM team can complete referral form (M)
 - AM team can send case/referral form to SCO (M)
 - SCO can schedule a hearing (S)
 - SCO can send an email containing outcome of case to the PS team (M) 
 - PS team can register a case (M)
 - SCO can record a case on their records (M)
 - SCO can close a case (M)
 
Non-functional Requirements

Operational:
 -getCaseStatus(caseCode:int) : String, Obtains a human readable, HTML formatted status of the specified case(M)
 -referCase(case: MisconductCase) : int, Returns the SCO code for the case referred(M)
 -getPreviousOffences(studentNumber: int) : int ,Returns the number of previous offences of the specified student(M)

Development:
 -Java will be used for the backend and mySQL for the database(S)
 -System to be developed by 24th March 2021 10am(M)
 
Regulatory:
 -Following different data transmission protocols, such as HTTP, HTTPS,TCP,UDP and IEEE etc(S)
 -follows the code of conduct given by the BCS(British computer society) (M)

Security:
 -Log each operation performed by users and it's time stamp(C)
 -backup storage of data to prevent data loss(S)
 -use of virus detection software to reject malicious packages(S)

Maintainability:
 -able to update new versions of the software to fix bugs(M)
 -All users can report bugs(S)

Ethical:
 -Privacy and Anonymity of the users(M)
 -The system should only allow relative members to view the data stored(M)
 
 Product requirement:

-The system acts as a single and standardized system for ATOM university to control any academic misconduct by its students. The system is as flexible as possible due to the dynamic nature of the purpose. (M)
-The system will be an interactive transactional based system. (M)

Space requirement:

-The system efficiently can store information of all students including specific program they are enrolled in, each module code, a title, module leader, lecturers, number of credits and information of all staff. (M)
-Database size will not exceed 500MB. (C)

Performance and Scalability:

-0.3 seconds for the system to respond to the user. (S)
-Each page should load within 1 second when the number of users on the system at the same time is above 1000 (S)
-The system can have multiple users using the system for various requests at the same time (S)

Usability:

-User friendly interface that staff can easily interact with. (S)
-Users will be able to use all system functions after 1 hour of training. (C)

Stability/Dependability:

-Failure rate should be below 5%. (C)
-The failure rate and efficiency should be consistent over a long period of time. (S)
-High performance and responsiveness at peak time. (C)
-The system must be available to all users during normal working hours (Mon-Fri, 7:00-19:00). (M)
-System should take no longer than 5 minutes to restart after failure. (C)

Environmental:

-Able to run on most types of browsers such as: Chrome and Firefox. (M)
-Should be compatible with ATOMs Universityâ€™s operating systems (may include Linux, Windows, MacOS). (M)
